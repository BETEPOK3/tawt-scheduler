syntax = "proto3";

package scheduler;

import "google/protobuf/struct.proto";

option go_package = "github.com/BETEPOK3/tawt-scheduler/schema/gen/go/scheduler;scheduler";
option java_multiple_files = true;
option java_package = "ru.textanalysis.tawt.scheduler.proto.scheduler";

// Task - сущность задачи.
message Task {
    // Status - статус задачи.
    enum Status {
        // TASK_STATUS_UNSPECIFIED - статус не указан.
        TASK_STATUS_UNSPECIFIED = 0;
        // QUEUED - статус "добавлена в очередь".
        QUEUED = 1;
        // IN_PROGRESS - статус "в процессе обработки".
        IN_PROGRESS = 2;
        // COMPLETED - статус "заверешена".
        COMPLETED = 3;
        // ERROR - статус "обработана с ошибкой".
        ERROR = 4;
    }

    // id - идентификатор задачи.
    string id = 1;
    // type - тип задачи с параметрами.
    TaskType type = 2;
    // input - входные данные задачи (в формате JSON).
    string input = 3;
    // input - выходные данные задачи (в формате JSON).
    optional string output = 4;
    // created_at - дата и время создания задачи.
    string created_at = 5;
    // finished_at - дата и время окончания обработки задачи.
    optional string finished_at = 6;
    // status - статус задачи.
    Status status = 7;
    // error - описание возможной ошибки обработки.
    optional string error = 8;
}

// TaskType - тип задачи.
message TaskType {
    // specific - определённый тип.
    oneof specific {
        // graphematical - тип задачи "графематический анализ".
        TaskTypeGraphematical graphematical = 1;
        // gama - тип задачи "граф. + морфологический анализ".
        TaskTypeGama gama = 2;
        // disambiguation_false - ип задачи "граф. + морфологический анализ + устранение неоднозначностей".
        TaskTypeDisambiguationFalse disambiguation_false = 3;
        // disambiguation_true - тип задачи "граф. + морфологический анализ + устранение неоднозначностей с использованием статистического анализа".
        TaskTypeDisambiguationTrue disambiguation_true = 4;
        // syntax - тип задачи "граф. + морф. + синтаксический анализ".
        TaskTypeSyntax syntax = 5;
    }
}

// TaskTypeGraphematical - тип задачи "графематический анализ".
message TaskTypeGraphematical {}

// TaskTypeGama - тип задачи "граф. + морфологический анализ".
message TaskTypeGama {}

// TaskTypeDisambiguationFalse - тип задачи "граф. + морфологический анализ + устранение неоднозначностей".
message TaskTypeDisambiguationFalse {}

// TaskTypeDisambiguationTrue - тип задачи "граф. + морфологический анализ + устранение неоднозначностей с использованием статистического анализа".
message TaskTypeDisambiguationTrue {}

// TaskTypeSyntax - тип задачи "граф. + морф. + синтаксический анализ".
message TaskTypeSyntax {}

// CreateTask - DTO создания задачи.
message CreateTask {
    // type - тип задачи с параметрами.
    TaskType type = 1;
    // input - входные данные задачи (в формате JSON).
    bytes input = 2;
    // priority - приоритет задачи.
    uint32 priority = 3;
}

// TaskStreamData - DTO данных задачи, необходимых для её обработки.
message TaskStreamData {
    // id - идентификатор задачи.
    string task_id = 1;
    // type - тип задачи с параметрами.
    TaskType type = 2;
    // input - входные данные задачи (в формате JSON).
    string input = 3;
}

// FinishTask - DTO завершения задачи.
message FinishTask {
    // id - идентификатор задачи.
    string task_id = 1;
    // output - выходные данные задачи (в формате JSON).
    optional string output = 2;
    // error - сообщение об ошибке.
    optional string error = 3;
}

// QueueType - тип очереди.
enum QueueType {
    // QUEUE_TYPE_UNSPECIFIED - тип очереди не определён.
    QUEUE_TYPE_UNSPECIFIED = 0;
    // SLOW - очередь для медленных задач.
    SLOW = 1;
    // FAST - очередь для быстрых задач.
    FAST = 2;
}