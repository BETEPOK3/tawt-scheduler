// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scheduler/types.proto

// Protobuf Java Version: 4.26.0
package ru.textanalysis.tawt.scheduler.proto.scheduler;

/**
 * <pre>
 * CreateTask - DTO создания задачи.
 * </pre>
 *
 * Protobuf type {@code scheduler.CreateTask}
 */
public final class CreateTask extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:scheduler.CreateTask)
    CreateTaskOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 0,
      /* suffix= */ "",
      CreateTask.class.getName());
  }
  // Use CreateTask.newBuilder() to construct.
  private CreateTask(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private CreateTask() {
    input_ = com.google.protobuf.ByteString.EMPTY;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ru.textanalysis.tawt.scheduler.proto.scheduler.Types.internal_static_scheduler_CreateTask_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ru.textanalysis.tawt.scheduler.proto.scheduler.Types.internal_static_scheduler_CreateTask_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask.class, ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask.Builder.class);
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType type_;
  /**
   * <pre>
   * type - тип задачи с параметрами.
   * </pre>
   *
   * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override
  public boolean hasType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * type - тип задачи с параметрами.
   * </pre>
   *
   * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
   * @return The type.
   */
  @java.lang.Override
  public ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType getType() {
    return type_ == null ? ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.getDefaultInstance() : type_;
  }
  /**
   * <pre>
   * type - тип задачи с параметрами.
   * </pre>
   *
   * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
   */
  @java.lang.Override
  public ru.textanalysis.tawt.scheduler.proto.scheduler.TaskTypeOrBuilder getTypeOrBuilder() {
    return type_ == null ? ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.getDefaultInstance() : type_;
  }

  public static final int INPUT_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString input_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * input - входные данные задачи.
   * </pre>
   *
   * <code>bytes input = 2 [json_name = "input"];</code>
   * @return The input.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getInput() {
    return input_;
  }

  public static final int PRIORITY_FIELD_NUMBER = 3;
  private int priority_ = 0;
  /**
   * <pre>
   * priority - приоритет задачи.
   * </pre>
   *
   * <code>uint32 priority = 3 [json_name = "priority"];</code>
   * @return The priority.
   */
  @java.lang.Override
  public int getPriority() {
    return priority_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getType());
    }
    if (!input_.isEmpty()) {
      output.writeBytes(2, input_);
    }
    if (priority_ != 0) {
      output.writeUInt32(3, priority_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getType());
    }
    if (!input_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, input_);
    }
    if (priority_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, priority_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask)) {
      return super.equals(obj);
    }
    ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask other = (ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask) obj;

    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (!getType()
          .equals(other.getType())) return false;
    }
    if (!getInput()
        .equals(other.getInput())) return false;
    if (getPriority()
        != other.getPriority()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
    }
    hash = (37 * hash) + INPUT_FIELD_NUMBER;
    hash = (53 * hash) + getInput().hashCode();
    hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
    hash = (53 * hash) + getPriority();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * CreateTask - DTO создания задачи.
   * </pre>
   *
   * Protobuf type {@code scheduler.CreateTask}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:scheduler.CreateTask)
      ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTaskOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.textanalysis.tawt.scheduler.proto.scheduler.Types.internal_static_scheduler_CreateTask_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.textanalysis.tawt.scheduler.proto.scheduler.Types.internal_static_scheduler_CreateTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask.class, ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask.Builder.class);
    }

    // Construct using ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getTypeFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = null;
      if (typeBuilder_ != null) {
        typeBuilder_.dispose();
        typeBuilder_ = null;
      }
      input_ = com.google.protobuf.ByteString.EMPTY;
      priority_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ru.textanalysis.tawt.scheduler.proto.scheduler.Types.internal_static_scheduler_CreateTask_descriptor;
    }

    @java.lang.Override
    public ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask getDefaultInstanceForType() {
      return ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask.getDefaultInstance();
    }

    @java.lang.Override
    public ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask build() {
      ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask buildPartial() {
      ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask result = new ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = typeBuilder_ == null
            ? type_
            : typeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.input_ = input_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.priority_ = priority_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask) {
        return mergeFrom((ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask other) {
      if (other == ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask.getDefaultInstance()) return this;
      if (other.hasType()) {
        mergeType(other.getType());
      }
      if (other.getInput() != com.google.protobuf.ByteString.EMPTY) {
        setInput(other.getInput());
      }
      if (other.getPriority() != 0) {
        setPriority(other.getPriority());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTypeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              priority_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType type_;
    private com.google.protobuf.SingleFieldBuilder<
        ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType, ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.Builder, ru.textanalysis.tawt.scheduler.proto.scheduler.TaskTypeOrBuilder> typeBuilder_;
    /**
     * <pre>
     * type - тип задачи с параметрами.
     * </pre>
     *
     * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
     * @return Whether the type field is set.
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * type - тип задачи с параметрами.
     * </pre>
     *
     * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
     * @return The type.
     */
    public ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType getType() {
      if (typeBuilder_ == null) {
        return type_ == null ? ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.getDefaultInstance() : type_;
      } else {
        return typeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * type - тип задачи с параметрами.
     * </pre>
     *
     * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
     */
    public Builder setType(ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType value) {
      if (typeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
      } else {
        typeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type - тип задачи с параметрами.
     * </pre>
     *
     * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
     */
    public Builder setType(
        ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.Builder builderForValue) {
      if (typeBuilder_ == null) {
        type_ = builderForValue.build();
      } else {
        typeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type - тип задачи с параметрами.
     * </pre>
     *
     * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
     */
    public Builder mergeType(ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType value) {
      if (typeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          type_ != null &&
          type_ != ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.getDefaultInstance()) {
          getTypeBuilder().mergeFrom(value);
        } else {
          type_ = value;
        }
      } else {
        typeBuilder_.mergeFrom(value);
      }
      if (type_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * type - тип задачи с параметрами.
     * </pre>
     *
     * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = null;
      if (typeBuilder_ != null) {
        typeBuilder_.dispose();
        typeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type - тип задачи с параметрами.
     * </pre>
     *
     * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
     */
    public ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.Builder getTypeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getTypeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * type - тип задачи с параметрами.
     * </pre>
     *
     * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
     */
    public ru.textanalysis.tawt.scheduler.proto.scheduler.TaskTypeOrBuilder getTypeOrBuilder() {
      if (typeBuilder_ != null) {
        return typeBuilder_.getMessageOrBuilder();
      } else {
        return type_ == null ?
            ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.getDefaultInstance() : type_;
      }
    }
    /**
     * <pre>
     * type - тип задачи с параметрами.
     * </pre>
     *
     * <code>.scheduler.TaskType type = 1 [json_name = "type"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType, ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.Builder, ru.textanalysis.tawt.scheduler.proto.scheduler.TaskTypeOrBuilder> 
        getTypeFieldBuilder() {
      if (typeBuilder_ == null) {
        typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType, ru.textanalysis.tawt.scheduler.proto.scheduler.TaskType.Builder, ru.textanalysis.tawt.scheduler.proto.scheduler.TaskTypeOrBuilder>(
                getType(),
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      return typeBuilder_;
    }

    private com.google.protobuf.ByteString input_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * input - входные данные задачи.
     * </pre>
     *
     * <code>bytes input = 2 [json_name = "input"];</code>
     * @return The input.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getInput() {
      return input_;
    }
    /**
     * <pre>
     * input - входные данные задачи.
     * </pre>
     *
     * <code>bytes input = 2 [json_name = "input"];</code>
     * @param value The input to set.
     * @return This builder for chaining.
     */
    public Builder setInput(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      input_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * input - входные данные задачи.
     * </pre>
     *
     * <code>bytes input = 2 [json_name = "input"];</code>
     * @return This builder for chaining.
     */
    public Builder clearInput() {
      bitField0_ = (bitField0_ & ~0x00000002);
      input_ = getDefaultInstance().getInput();
      onChanged();
      return this;
    }

    private int priority_ ;
    /**
     * <pre>
     * priority - приоритет задачи.
     * </pre>
     *
     * <code>uint32 priority = 3 [json_name = "priority"];</code>
     * @return The priority.
     */
    @java.lang.Override
    public int getPriority() {
      return priority_;
    }
    /**
     * <pre>
     * priority - приоритет задачи.
     * </pre>
     *
     * <code>uint32 priority = 3 [json_name = "priority"];</code>
     * @param value The priority to set.
     * @return This builder for chaining.
     */
    public Builder setPriority(int value) {

      priority_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * priority - приоритет задачи.
     * </pre>
     *
     * <code>uint32 priority = 3 [json_name = "priority"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPriority() {
      bitField0_ = (bitField0_ & ~0x00000004);
      priority_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:scheduler.CreateTask)
  }

  // @@protoc_insertion_point(class_scope:scheduler.CreateTask)
  private static final ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask();
  }

  public static ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreateTask>
      PARSER = new com.google.protobuf.AbstractParser<CreateTask>() {
    @java.lang.Override
    public CreateTask parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CreateTask> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CreateTask> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ru.textanalysis.tawt.scheduler.proto.scheduler.CreateTask getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

